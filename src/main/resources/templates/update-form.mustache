{{>/layout/header}}
<input type="hidden" id="userId" value="{{principal.id}}">
<div class="container mt-3">
	<div class="mb-3 mt-3">
		<label class="form-label">아이디:</label>
		<input id="username" type="text" class="form-control" value="{{principal.username}}" required maxlength="20"
			readonly>
	</div>
	<div class="mb-3 mt-3">
		<label class="form-label">이메일:</label>
		<input id="email" type="email" class="form-control" value="{{principal.email}}" required maxlength="50">
	</div>
	<div id="callBackDiv" class="mb-3">
		<label class="form-label">주소:</label>
		<div class="d-flex">
			<input type="text" class="form-control mt-3" id="roadFullAddr" value="{{principal.address}}" readonly />
			<input type="button" class="btn btn-primary" onClick="goPopup();" value="주소찾기" />
		</div>
	</div>
	<div class="d-flex justify-content-between">
		<button id="btn-update" type="button" class="btn btn-primary">수정</button>
		<button id="btn-delete" type="button" class="btn btn-danger">삭제</button>
	</div>

</div>

<script>
	$("#btn-update").click(() => {
		update();
	})

	$("#btn-delete").click(() => {
		deleteUser();
	})

	let deleteUser = async () => {
		let check = confirm("정말 회원을 탈퇴 하시겠습니까?? \n 주의 : 삭제가 성공하면 회원의 모든 정보가 삭제 됩니다.")
		if (check == true) {
			let userId = $("#userId").val();
			let response = await fetch(`/s/api/user/${userId}`, {
				method: "DELETE"
			})
			if (response.status == 200) {
				alert("회원을 삭제하였습니다");
				location.href = "/login-form"
			}
		}
	}

	let update = async () => {
		let userId = $("#userId").val();
		let updateDto = {
			email: $("#email").val(),
			address: $("#roadFullAddr").val()
		}
		let response = await fetch(`/s/api/user/${userId}`, {
			method: "PUT",
			headers: {
				"Content-Type": "application/json; charset=utf-8"
			},
			body: JSON.stringify(updateDto)
		})
		if (response.status == 200) {
			alert("회원정보를 수정하였습니다");
			location.href = "/s/update-form"
		}
	}


</script>
{{>/layout/footer}}